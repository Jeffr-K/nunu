/*
 * This file is generated by jOOQ.
 */
package com.haco.shop.infrastructure.jooq.generated.tables.records


import com.haco.shop.infrastructure.jooq.generated.enums.MemberProvider
import com.haco.shop.infrastructure.jooq.generated.tables.Member

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class MemberRecord() : UpdatableRecordImpl<MemberRecord>(Member.MEMBER) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(1, value)
        get(): LocalDateTime? = get(1) as LocalDateTime?

    open var email: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var nickname: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var profileImage: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var provider: MemberProvider?
        set(value): Unit = set(5, value)
        get(): MemberProvider? = get(5) as MemberProvider?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(6, value)
        get(): LocalDateTime? = get(6) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised MemberRecord
     */
    constructor(id: Long? = null, createdAt: LocalDateTime? = null, email: String? = null, nickname: String? = null, profileImage: String? = null, provider: MemberProvider? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.createdAt = createdAt
        this.email = email
        this.nickname = nickname
        this.profileImage = profileImage
        this.provider = provider
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    constructor(value: com.haco.shop.infrastructure.jooq.generated.tables.pojos.Member?): this() {
        if (value != null) {
            this.id = value.id
            this.createdAt = value.createdAt
            this.email = value.email
            this.nickname = value.nickname
            this.profileImage = value.profileImage
            this.provider = value.provider
            this.updatedAt = value.updatedAt
            resetTouchedOnNotNull()
        }
    }
}
